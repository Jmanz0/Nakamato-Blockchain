syntax = "proto3";

package blockchain;
option go_package = "proto/gen";

// Main blockchain service
service BlockchainService {
  // Get blockchain status
  rpc GetStatus(Empty) returns (StatusResponse) {}
  
  // Get block by height or hash
  rpc GetBlock(BlockRequest) returns (Block) {}
  
  // Get transaction by hash
  rpc GetTransaction(TxRequest) returns (Transaction) {}
  
  // Submit new transaction
  rpc SubmitTransaction(Transaction) returns (TxResponse) {}

  // Submit new block
  rpc SubmitBlock(BlockWithHeaders) returns (BlockResponse) {}
}

// Empty message for requests that don't need parameters
message Empty {}

// Status response containing chain information
message StatusResponse {
  int32 height = 1;
  string latest_block_hash = 2;
}

// Request for getting specific block
message BlockRequest {
  oneof identifier {
    int32 height = 1;
    string hash = 2;
  }
}

// Block message containing block data
message Block {
  BlockHeader header = 1;
  BlockContent content = 2;
  string hash = 3;
}

// Block header containing consensus-critical information
message BlockHeader {
  int64 timestamp = 1;
  string previous_hash = 2;
  string content_hash = 3;
  int32 height = 4;
  int64 difficulty = 5;
  int64 nonce = 6;
}

message BlockWithHeaders {
  Block block = 1;
  repeated BlockHeader last_100_headers = 2;
}

message BlockContent {
  repeated Transaction transactions = 1;
}

message BlockResponse {
  bool accepted = 1;
  string error = 2;
}

// Request for getting specific transaction
message TxRequest {
  string hash = 1;
}

// Transaction message
message Transaction {
  repeated UTXO inputs = 1;
  repeated UTXO outputs = 2;
  int64 timestamp = 3;
  string signature = 4;
  string hash = 5;
}

message UTXO {
  string tx_hash = 1;
  int32 output_index = 2;
  int64 amount = 3;
  string address = 4;
}

// Response after submitting transaction
message TxResponse {
  string hash = 1;
  bool accepted = 2;
  string error = 3;
}

message ChainValidationResponse {
    bool valid = 1; // Indicates if the blockchain is valid.
}
